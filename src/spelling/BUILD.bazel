# Copyright 2010-2021, Google Inc.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#
#     * Redistributions of source code must retain the above copyright
# notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above
# copyright notice, this list of conditions and the following disclaimer
# in the documentation and/or other materials provided with the
# distribution.
#     * Neither the name of Google Inc. nor the names of its
# contributors may be used to endorse or promote products derived from
# this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

load(
    "//:build_defs.bzl",
    "cc_binary_mozc",
    "cc_library_mozc",
    "cc_test_mozc",
)

package(default_visibility = [
    "//:__subpackages__",
])

cc_library_mozc(
    name = "spellchecker_service_interface",
    srcs = ["spellchecker_service_factory.cc"],
    hdrs = ["spellchecker_service_interface.h"],
    visibility = [
        "//:__subpackages__",
    ],
    deps = [
        "//protocol:commands_cc_proto",
    ],
)

cc_library_mozc(
    name = "spellchecker_service_registration",
    srcs = ["spellchecker_service_registration.cc"],
    hdrs = ["spellchecker_service_interface.h"],
    visibility = [
        "//:__subpackages__",
    ],
    deps = [
        ":spellchecker_service",
        ":spellchecker_service_interface",
        "//protocol:commands_cc_proto",
    ],
    alwayslink = 1,
)

cc_library_mozc(
    name = "spellchecker_service",
    srcs = ["spellchecker_service.cc"],
    hdrs = ["spellchecker_service.h"],
    deps = [
        ":spellchecker_service_interface",
        "//base:file_util",
        "//base:port",
        "//base:thread",
        "//base:util",
        "//engine:engine_builder",
        "//protocol:commands_cc_proto",
        "//protocol:engine_builder_cc_proto",
        "@com_google_absl//absl/algorithm:container",
        "@com_google_absl//absl/base:core_headers",
        "@com_google_absl//absl/memory",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/types:span",
    ],
    alwayslink = 1,
)

cc_binary_mozc(
    name = "spellchecker_service_main",
    srcs = ["spellchecker_service_main.cc"],
    deps = [
        ":spellchecker_service_interface",
        ":spellchecker_service_registration",
        "//engine:engine_builder",
        "//protocol:commands_cc_proto",
        "//protocol:engine_builder_cc_proto",
        "@com_google_absl//absl/flags:flag",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
    ],
)

cc_test_mozc(
    name = "spellchecker_service_test",
    size = "small",
    srcs = ["spellchecker_service_test.cc"],
    deps = [
        ":spellchecker_service",
        "//base",
        "//base:file_util",
        "//base:util",
        "//data_manager",
        "//protocol:commands_cc_proto",
        "//testing:gunit_main",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/strings",
    ],
)
