# Copyright 2010-2021, Google Inc.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#
#     * Redistributions of source code must retain the above copyright
# notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above
# copyright notice, this list of conditions and the following disclaimer
# in the documentation and/or other materials provided with the
# distribution.
#     * Neither the name of Google Inc. nor the names of its
# contributors may be used to endorse or promote products derived from
# this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

load(
    "//:build_defs.bzl",
    "mozc_cc_library",
    "mozc_cc_test",
    "mozc_select",
)

package(default_visibility = ["//visibility:private"])

mozc_cc_library(
    name = "client_interface",
    hdrs = ["client_interface.h"],
    visibility = [
        "//gui:__subpackages__",
        "//mac:__pkg__",
        "//renderer:__subpackages__",
        "//session:__pkg__",
        "//visibility:public",
        "//win32:__subpackages__",
    ],
    deps = [
        "//base/strings:zstring_view",
        "//ipc",
        "//protocol:commands_cc_proto",
        "//protocol:config_cc_proto",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/time",
    ],
)

mozc_cc_library(
    name = "client",
    srcs = [
        "client.cc",
        "server_launcher.cc",
    ],
    hdrs = [
        "client.h",
    ],
    local_defines = mozc_select(
        linux = ["MOZC_USE_SVS_JAPANESE"],
        oss = ["MOZC_USE_SVS_JAPANESE"],
    ),
    visibility = [
        "//gui:__subpackages__",
        "//mac:__pkg__",
        "//session:__pkg__",
        "//unix:__subpackages__",
        "//visibility:public",
        "//win32:__subpackages__",
    ],
    deps = [
        ":client_interface",
        "//base:const",
        "//base:file_stream",
        "//base:file_util",
        "//base:process",
        "//base:run_level",
        "//base:singleton",
        "//base:system_util",
        "//base:version",
        "//base:vlog",
        "//base/strings:assign",
        "//base/strings:zstring_view",
        "//composer:key_event_util",
        "//config:config_handler",
        "//ipc",
        "//ipc:named_event",
        "//protocol:commands_cc_proto",
        "//protocol:config_cc_proto",
        "//session:key_info_util",
        "//testing:friend_test",
        "@com_google_absl//absl/log",
        "@com_google_absl//absl/log:check",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/time",
    ] + mozc_select(
        ios = [
            "//base/mac:mac_process",
            "//base/mac:mac_util",
        ],
        macos = [
            "//base/mac:mac_process",
            "//base/mac:mac_util",
        ],
        windows = [
            "//base/win32:wide_char",
            "//base/win32:win_sandbox",
        ],
    ),
)

mozc_cc_test(
    name = "client_test",
    size = "small",
    srcs = ["client_test.cc"],
    deps = [
        ":client",
        ":client_interface",
        "//base:number_util",
        "//base:version",
        "//base/strings:assign",
        "//base/strings:zstring_view",
        "//composer:key_parser",
        "//config:config_handler",
        "//ipc",
        "//ipc:ipc_mock",
        "//protocol:commands_cc_proto",
        "//protocol:config_cc_proto",
        "//testing:gunit_main",
        "@com_google_absl//absl/container:flat_hash_map",
        "@com_google_absl//absl/log",
        "@com_google_absl//absl/strings",
    ],
)

mozc_cc_library(
    name = "client_mock",
    testonly = True,
    hdrs = ["client_mock.h"],
    visibility = [
        "//mac:__pkg__",
        "//session:__pkg__",
        "//unix:__subpackages__",
        "//visibility:public",
    ],
    deps = [
        ":client_interface",
        "//ipc",
        "//protocol:commands_cc_proto",
        "//protocol:config_cc_proto",
        "//testing:gunit",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/time",
    ],
)
