# enable_bzlmod causes the build failure. Suppress it util the fix.
common --noenable_bzlmod

common:linux --config=compiler_gcc_like
common:oss_linux --config=compiler_gcc_like
common:prod_linux --config=compiler_gcc_like
common:android --config=compiler_gcc_like
common:oss_android --config=compiler_gcc_like
common:prod_android --config=compiler_gcc_like
common:macos --config=compiler_gcc_like
common:oss_macos --config=compiler_gcc_like
common:prod_macos --config=compiler_gcc_like

# Make sure we set -std=c++20 that may affect ABI across all the compilation targets.
# https://github.com/abseil/abseil-cpp/blob/master/FAQ.md#what-is-abi-and-why-dont-you-recommend-using-a-pre-compiled-version-of-abseil
build:compiler_gcc_like --cxxopt "-std=c++20" --host_cxxopt "-std=c++20"
build:compiler_gcc_like --copt "-funsigned-char" --host_copt "-funsigned-char"
build:compiler_gcc_like --copt "-Wno-sign-compare" --host_copt "-Wno-sign-compare"
build:compiler_gcc_like --copt "-Wno-char-subscripts" --host_copt "-Wno-char-subscripts"
build:compiler_msvc_like --cxxopt "/std:c++20" --host_cxxopt "/std:c++20"
build:compiler_msvc_like --copt "/J" --host_copt "/J"
build:compiler_msvc_like --copt "/utf-8" --host_copt "/utf-8"
build:compiler_msvc_like --cxxopt "/J" --host_cxxopt "/J"
build:compiler_msvc_like --cxxopt "/utf-8" --host_cxxopt "/utf-8"

# Linux
build:linux --define TARGET=oss_linux --copt "-fPIC"
build:linux --build_tag_filters=-nolinux
test:linux --test_tag_filters=-nolinux
build:oss_linux --define TARGET=oss_linux --copt "-fPIC"
build:oss_linux --build_tag_filters=-nolinux
test:oss_linux --test_tag_filters=-nolinux

build:prod_linux --define TARGET=prod_linux --copt "-fPIC"
build:prod_linux --build_tag_filters=-nolinux

# macOS
build:macos --define TARGET=oss_macos --build_tag_filters=-nomac
test:macos --define TARGET=oss_macos --test_tag_filters=-nomac
build:oss_macos --define TARGET=oss_macos --build_tag_filters=-nomac --objccopt "-fsigned-char"
test:oss_macos --define TARGET=oss_macos --test_tag_filters=-nomac
build:prod_macos --define TARGET=prod_macos --build_tag_filters=-nomac --objccopt "-fsigned-char"

# Windows
build:windows --define TARGET=oss_windows --build_tag_filters=-nowin
build:oss_windows --define TARGET=oss_windows --build_tag_filters=-nowin
build:prod_windows --define TARGET=prod_windows --build_tag_filters=-nowin

# Android / OSS Android (same configurations)
build:android --define TARGET=oss_android --copt "-DOS_ANDROID"
build:android --android_crosstool_top=@androidndk//:toolchain
# --fat_apk_cpu should be replaced with --android_platforms
# https://github.com/bazelbuild/bazel/commit/05bea52ed3159aa5d15d967f5f56fc084a2b6c73
build:android --fat_apk_cpu=armeabi-v7a,arm64-v8a,x86,x86_64 --incompatible_enable_android_toolchain_resolution=false
build:android --host_crosstool_top=@bazel_tools//tools/cpp:toolchain
build:android --build_tag_filters=-noandroid
test:android --test_tag_filters=-noandroid
build:oss_android --define TARGET=oss_android --copt "-DOS_ANDROID"
build:oss_android --android_crosstool_top=@androidndk//:toolchain
# --fat_apk_cpu should be replaced with --android_platforms
# https://github.com/bazelbuild/bazel/commit/05bea52ed3159aa5d15d967f5f56fc084a2b6c73
build:oss_android --fat_apk_cpu=armeabi-v7a,arm64-v8a,x86,x86_64 --incompatible_enable_android_toolchain_resolution=false
build:oss_android --host_crosstool_top=@bazel_tools//tools/cpp:toolchain
build:oss_android --build_tag_filters=-noandroid
test:oss_android --test_tag_filters=-noandroid
